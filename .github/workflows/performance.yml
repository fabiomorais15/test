name: Lighthouse CI on Vercel Preview

on:
  pull_request:


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: amondnet/vercel-action@v20
        id: vercel-deployment
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          vercel-project-name: 'nextjs-tooling'
    outputs:
      preview-url: ${{ steps.vercel-deployment.outputs.preview-url }}

  lighthouse:

    runs-on: ubuntu-latest
    needs: deploy
    
    steps:
      - uses: actions/checkout@v3
      - name: Audit URLs using Lighthouse
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            ${{ needs.deploy.outputs.preview-url }}
          
          runs: 3
          uploadArtifacts: true # save results as an action artifacts
          temporaryPublicStorage: true # upload lighthouse report to the temporary storage
      
      - name: Debug Output
        run: |
          echo "Lighthouse Audit Outputs:"
          echo "Manifest: ${{ steps.lighthouse_audit.outputs.manifest }}"
          echo "Links: ${{ steps.lighthouse_audit.outputs.links }}"
      
      - name: Format lighthouse result
        id: lighthouse_result
        if: ${{ always() }}
        uses: actions/github-script@v4
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const links = ${{ steps.lighthouse_audit.outputs.links }}
            const results = (${{ steps.lighthouse_audit.outputs.manifest }}).filter(result => result.isRepresentativeRun);

            const score = res => res >= 90 ? '🟢' : res >= 50 ? '🟠' : '🔴';

            const comment = results.map((result) => {
            const summary = result.summary;
            const url = result.url;

            return `
            🌎 [${url}](${url})
            ⚡️ [Lighthouse report](${links[url]})

            | Category | Score |
            | --- | --- |
            ${Object.keys(summary).map((key) => {
            const percentage = Math.round(summary[key] * 100);
            return `| ${score(percentage)} ${key} | ${percentage} |`;
            }).join('\n')}

            `;
            }).join('---');

            core.setOutput("comment", comment);    
      
      - name: Add Lighthouse comment to PR
        id: lighthouse_comment_to_pr
        if: ${{ always() }}
        uses: marocchino/sticky-pull-request-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          header: lighthouse
          message: |
            ${{ steps.lighthouse_result.outputs.comment }}    